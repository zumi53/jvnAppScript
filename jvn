function onOpen() {
  // Add a custom menu to the spreadsheet.
  SpreadsheetApp.getUi() 
      .createMenu('JVN 取得')
      .addItem('最新JVN', 'fetchNewJVN')
      .addItem('最新アップデートJVN', 'fetchNewUpdateJVN')
      .addToUi();
}


function fetchNewJVN(){
  //定数やenum
  var url = 'http://jvndb.jvn.jp/ja/rss/jvndb_new.rdf';
  var tableId = "1ycl5B0e_R5uQlem-QzLcjpRDgFAmwsp40ceR1ExY"; //fusion table ID
  var rssNamespace = XmlService.getNamespace('http://purl.org/rss/1.0/');
  var secNamespace =  XmlService.getNamespace('http://jvn.jp/rss/mod_sec/');
  var dcNamespace = XmlService.getNamespace('http://purl.org/dc/elements/1.1/');
  var row = []; //spreadsheetに挿入する値の配列
  var errorCount = 0; //エラーが出てしまった回数を保存。
  
  //xmlファイルの取得
  var bggXml = UrlFetchApp.fetch(url).getContentText();
  var document = XmlService.parse(bggXml);
  //itemsタグの要素の取得
  var root = document.getRootElement();
  var entries = root.getChildren('item',rssNamespace);
  for(var i=0; i < entries.length; i++){
    var score = 0;
    //rowに格納するobj
    var data = {
      'ID':"",
      "version":"",
      'description':"",
      'link':"",
      'releaseDate':""
    }
    try{
      if(entries[i].getChild('cvss',secNamespace) != null){
        score =  entries[i].getChild('cvss',secNamespace).getAttribute('score').getValue();
      }
    
      if(score >= 5){
        data.link = entries[i].getChild('link',rssNamespace).getText();
        data.ID = entries[i].getChild('identifier',dcNamespace).getText();
        data.description = entries[i].getChild('description',rssNamespace).getText().replace(/[\n\r]/g,"");
        //YQLを使用してHTML をJSONに変換
        var json = UrlFetchApp.fetch("https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20html%20where%20url%3D'"+data.link+"'&format=json&diagnostics=true&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&callback=");
        var obj_json = JSON.parse(json);
        data.releaseDate = obj_json.query.results.body.div.div[2].div[0].div.div.table[1].tbody.tr[1].td[1];
        var blockquote = obj_json.query.results.body.div.div[2].div[0].div.div.table[0].tbody.tr[9].td.blockquote;
        parseBlockquote(data,blockquote);
        row.push(data);
      }
    }catch(e){
      errorCount++;
      Logger.log("エラーが起きました: %s :jvnID: %s",e,data.ID);
    }
  }

  var book = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = book.getSheets()[1];
  for(var i = 0; i < row.length; i++){
    sheet.insertRowBefore(2).getRange(2,1,1,8).setValues([[row[i].ID,"",row[i].version,row[i].description,"","",row[i].link,row[i].releaseDate]])
  }
  
   var ui = SpreadsheetApp.getUi();
   var response = ui.alert(row.length+"件のデータを取得しました。\n "+errorCount+"件のエラーが出ました。詳細はログに記載。", ui.ButtonSet.YES_NO);
}

function fetchNewUpdateJVN(){
  //定数やenum
  var url = 'http://jvndb.jvn.jp/ja/rss/jvndb.rdf';
  var tableId = "1ycl5B0e_R5uQlem-QzLcjpRDgFAmwsp40ceR1ExY"; //fusion table ID
  var rssNamespace = XmlService.getNamespace('http://purl.org/rss/1.0/');
  var secNamespace =  XmlService.getNamespace('http://jvn.jp/rss/mod_sec/');
  var dcNamespace = XmlService.getNamespace('http://purl.org/dc/elements/1.1/');
  var row = []; //spreadsheetに挿入する値の配列
  var errorCount = 0; //エラーが出てしまった回数を保存。
  
  //xmlファイルの取得
  var bggXml = UrlFetchApp.fetch(url).getContentText();
  var document = XmlService.parse(bggXml);
  //itemsタグの要素の取得
  var root = document.getRootElement();
  var entries = root.getChildren('item',rssNamespace);
  for(var i=0; i < entries.length; i++){
    var score = 0;
    //rowに格納するobj
    var data = {
      'ID':"",
      "version":"",
      'description':"",
      'link':"",
      'releaseDate':""
    }
    try{
      if(entries[i].getChild('cvss',secNamespace) != null){
        score =  entries[i].getChild('cvss',secNamespace).getAttribute('score').getValue();
      }
    
      if(score >= 5){
        data.link = entries[i].getChild('link',rssNamespace).getText();
        data.ID = entries[i].getChild('identifier',dcNamespace).getText();
        data.description = entries[i].getChild('description',rssNamespace).getText().replace(/[\n\r]/g,"");
        //YQLを使用してHTML をJSONに変換
        var json = UrlFetchApp.fetch("https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20html%20where%20url%3D'"+data.link+"'&format=json&diagnostics=true&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&callback=");
        var obj_json = JSON.parse(json);
        data.releaseDate = obj_json.query.results.body.div.div[2].div[0].div.div.table[1].tbody.tr[1].td[1];
        var blockquote = obj_json.query.results.body.div.div[2].div[0].div.div.table[0].tbody.tr[9].td.blockquote;
        parseBlockquote(data,blockquote);
        row.push(data);
      }
    }catch(e){
      errorCount++;
      Logger.log("エラーが起きました: %s :jvnID: %s",e,data.ID);
    }
  }

  var book = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = book.getSheets()[1];
  for(var i = 0; i < row.length; i++){
    sheet.insertRowBefore(2).getRange(2,1,1,8).setValues([[row[i].ID,"",row[i].version,row[i].description,"","",row[i].link,row[i].releaseDate]])
  }
  
   var ui = SpreadsheetApp.getUi();
   var response = ui.alert(row.length+"件のデータを取得しました。\n "+errorCount+"件のエラーが出ました。詳細はログに記載。", ui.ButtonSet.YES_NO);
}

function parseBlockquote(data,blockquote){
   if(typeof blockquote.ul === 'string'){
      data.version = blockquote.ul;
   }
   else if(Array.isArray(blockquote.ul)){
      blockquote.ul.forEach(function(li){
           data.version += li+"　"
      });
   }
   else if(typeof blockquote.ul === 'object'){
      if(typeof blockquote.ul.li === 'string'){
        data.version = blockquote.ul.li;
      }
      else if(Array.isArray(blockquote.ul.li)){
        blockquote.ul.li.forEach(function(val){
          data.version += val+"　"
        });
     }
     else{
       Logger.log("versionの読み込みに失敗1:%s",typeof blockquote);
     }
   }
   else{
       Logger.log("versionの読み込みに失敗2:%s",typeof blockquote);
   }
}
